# .github/workflows/trade-import.yml
name: Enhanced Auto Trade Import

on:
  schedule:
    - cron: '0 */6 * * *'  # Alle 6 Stunden f√ºr Stabilit√§t
  workflow_dispatch:
    inputs:
      mode:
        description: 'Import Mode'
        required: true
        default: 'update'
        type: choice
        options:
        - update
        - full
      account:
        description: 'Specific Account (optional)'
        required: false
        type: string
      days:
        description: 'Days back (default: 30)'
        required: false
        default: '30'
        type: string

jobs:
  import:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # Verhindert h√§ngende Jobs
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install Dependencies
      run: |
        pip install --upgrade pip
        pip install pybit gspread google-auth pandas pytz requests numpy sqlite3
    
    - name: Create Required Directories
      run: |
        mkdir -p static
        mkdir -p logs
    
    - name: Run Enhanced Trade Import
      env:
        # Bybit API Keys
        BYBIT_INCUBATORZONE_API_KEY: ${{ secrets.BYBIT_INCUBATORZONE_API_KEY }}
        BYBIT_INCUBATORZONE_API_SECRET: ${{ secrets.BYBIT_INCUBATORZONE_API_SECRET }}
        BYBIT_MEMESTRATEGIES_API_KEY: ${{ secrets.BYBIT_MEMESTRATEGIES_API_KEY }}
        BYBIT_MEMESTRATEGIES_API_SECRET: ${{ secrets.BYBIT_MEMESTRATEGIES_API_SECRET }}
        BYBIT_ETHAPESTRATEGIES_API_KEY: ${{ secrets.BYBIT_ETHAPESTRATEGIES_API_KEY }}
        BYBIT_ETHAPESTRATEGIES_API_SECRET: ${{ secrets.BYBIT_ETHAPESTRATEGIES_API_SECRET }}
        BYBIT_ALTSSTRATEGIES_API_KEY: ${{ secrets.BYBIT_ALTSSTRATEGIES_API_KEY }}
        BYBIT_ALTSSTRATEGIES_API_SECRET: ${{ secrets.BYBIT_ALTSSTRATEGIES_API_SECRET }}
        BYBIT_SOLSTRATEGIES_API_KEY: ${{ secrets.BYBIT_SOLSTRATEGIES_API_KEY }}
        BYBIT_SOLSTRATEGIES_API_SECRET: ${{ secrets.BYBIT_SOLSTRATEGIES_API_SECRET }}
        BYBIT_BTCSTRATEGIES_API_KEY: ${{ secrets.BYBIT_BTCSTRATEGIES_API_KEY }}
        BYBIT_BTCSTRATEGIES_API_SECRET: ${{ secrets.BYBIT_BTCSTRATEGIES_API_SECRET }}
        BYBIT_CORESTRATEGIES_API_KEY: ${{ secrets.BYBIT_CORESTRATEGIES_API_KEY }}
        BYBIT_CORESTRATEGIES_API_SECRET: ${{ secrets.BYBIT_CORESTRATEGIES_API_SECRET }}
        BYBIT_2K_API_KEY: ${{ secrets.BYBIT_2K_API_KEY }}
        BYBIT_2K_API_SECRET: ${{ secrets.BYBIT_2K_API_SECRET }}
        BYBIT_1K_API_KEY: ${{ secrets.BYBIT_1K_API_KEY }}
        BYBIT_1K_API_SECRET: ${{ secrets.BYBIT_1K_API_SECRET }}
        BYBIT_CLAUDE_PROJEKT_API_KEY: ${{ secrets.BYBIT_CLAUDE_PROJEKT_API_KEY }}
        BYBIT_CLAUDE_PROJEKT_API_SECRET: ${{ secrets.BYBIT_CLAUDE_PROJEKT_API_SECRET }}
        
        # Blofin API Keys
        BLOFIN_API_KEY: ${{ secrets.BLOFIN_API_KEY }}
        BLOFIN_API_SECRET: ${{ secrets.BLOFIN_API_SECRET }}
        BLOFIN_API_PASSPHRASE: ${{ secrets.BLOFIN_API_PASSPHRASE }}
        
        # Google Sheets
        GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
        
      run: |
        echo "üöÄ Starting Enhanced Trade Import..."
        echo "Mode: ${{ github.event.inputs.mode || 'update' }}"
        echo "Account: ${{ github.event.inputs.account || 'all' }}"
        echo "Days: ${{ github.event.inputs.days || '30' }}"
        
        # Baue Kommando
        CMD="python enhanced_trade_importer.py --mode=${{ github.event.inputs.mode || 'update' }} --days=${{ github.event.inputs.days || '30' }}"
        
        # F√ºge Account hinzu falls spezifiziert
        if [ ! -z "${{ github.event.inputs.account }}" ]; then
          CMD="$CMD --account='${{ github.event.inputs.account }}'"
        fi
        
        echo "Executing: $CMD"
        eval $CMD
    
    - name: Upload Logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: import-logs
        path: |
          trade_import.log
          logs/
        retention-days: 7
    
    - name: Notify on Failure
      if: failure()
      run: |
        echo "‚ùå Enhanced Trade Import failed!"
        echo "Check the logs for details."
        exit 1

  # Optional: Deployment Job wenn das Dashboard auch auf GitHub Pages gehostet wird
  deploy:
    needs: import
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - name: Trigger Dashboard Update
      run: |
        echo "‚úÖ Trade Import successful!"
        echo "üìä Google Sheets updated with latest trading data"
        echo "üöÄ Dashboard ready for updated data"
